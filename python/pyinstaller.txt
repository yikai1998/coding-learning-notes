-D, --onedir	默认模式，打包成一个文件夹（文件较多，有个exe及依赖目录）
-F, --onefile	打包成一个独立exe文件（常用）
-n NAME, --name NAME	指定生成的exe文件名（默认用你的py文件名）
-c, --console, --nowindowed	生成命令行窗口程序，适用于需要显示cmd窗口和输出的程序
-w, --windowed, --noconsole	不显示控制台窗口，适用于GUI应用（PyQt、Tkinter等）
-i ICON.ico, --icon ICON.ico	指定生成的exe使用的图标文件
--add-data SRC;DEST	手动将资源文件（如图片、数据）打包进exe
--hidden-import MODULENAME	指定PyInstaller自动没找到但实际用到的模块（比如某些动态导入情况）
--clean	打包前清理之前生成的缓存文件
--specpath PATH	指定.spec配置文件存放路径
-p PATH, --paths PATH	添加额外的Python包import查找路径（一般是你的自定义库/依赖地址）
--version-file FILE	指定一个文本，存放版本信息，打包时加入exe


`pyinstaller -F -w -i myicon.ico --add-data "datafile.csv;." myscript.py`
含义：打一个独立exe，有GUI不弹命令行，指定图标，打包资源文件datafile.csv到当前目录。

平常只打包自己的主项目，不用加--paths pandas...，不用写pandas的任何路径。
自己写的diy模块/包，只要和主py文件在一个文件夹里，直接pyinstaller就能成功。
但如果你把自写的包（比如diy）单独放到其他路径，比如D:\my_libs\diy，而不是main.py所在的文件夹，这时PyInstaller就找不到了，需要用-p D:\my_libs\diy明确告诉PyInstaller加这个查找路径。
